---
import Layout from '../../layouts/Layout.astro';

interface Paste {
  id: string;
  content: string;
  created_at: string;
}

export async function getStaticPaths() {
  return {
    fallback: true
  };
}

const { id } = Astro.params;
const shortenedId = id ? id.split('-')[0] : '';
const SUPABASE_URL = import.meta.env.PUBLIC_SUPABASE_URL;
const SUPABASE_ANON_KEY = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;

let paste: Paste | null = null;
try {
  const response = await fetch(
    `${SUPABASE_URL}/rest/v1/pastes?id=eq.${id}&select=*`,
    {
      headers: {
        apikey: SUPABASE_ANON_KEY,
        Authorization: `Bearer ${SUPABASE_ANON_KEY}`,
      },
    }
  );
  
  if (!response.ok) throw new Error('Failed to fetch paste');
  
  const data = await response.json();
  paste = data[0];
  
  if (!paste) {
    return Astro.redirect('/404');
  }
} catch (error) {
  console.error('Error fetching paste:', error);
  return Astro.redirect('/404');
}

const formatDate = (date: string) => {
  return new Intl.DateTimeFormat('sr-RS', {
    dateStyle: 'full',
    timeStyle: 'medium',
    timeZone: 'Europe/Belgrade'
  }).format(new Date(date));
};
---

<Layout>
  <main class="container mx-auto py-8">
    <div class="max-w-3xl mx-auto">
      <div class="flex justify-between items-center mb-4">
        <div class="flex items-center gap-2">
          <h1 class="text-2xl font-bold">Paste: </h1>
          <button
            id="copyId"
            class="p-1.5 text-sm bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors"
            title="Copy ID"
          >
            <span class="text-gray-400 text-xs hidden sm:inline">{id}</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
              <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
            </svg>
          </button>
        </div>
        <div class="flex gap-2">
          <button
            id="copyContent"
            class="p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors"
            title="Copy Content"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
              <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
            </svg>
          </button>
          <button
            id="shareUrl"
            class="p-2 bg-gray-700 hover:bg-gray-600 rounded-lg transition-colors"
            title="Share URL"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path>
              <polyline points="16 6 12 2 8 6"></polyline>
              <line x1="12" y1="2" x2="12" y2="15"></line>
            </svg>
          </button>
          <a
            href="/"
            class="p-2 bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors"
            title="New Paste"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"></path>
            </svg>
          </a>
        </div>
      </div>
      <div class="bg-gray-800 rounded-lg p-4">
        <pre class="whitespace-pre-wrap break-words"><code id="pasteContent">{paste.content}</code></pre>
      </div>
      <div class="mt-4 text-gray-400">
        Креирано: {formatDate(paste.created_at)}
      </div>
    </div>
  </main>
</Layout>

<script>
// Helper function for showing copy feedback
function showCopyFeedback(button: Element, originalHTML: string) {
  if (button instanceof HTMLElement) {
    button.innerHTML = `
      <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="20 6 9 17 4 12"></polyline>
      </svg>
    `;
    setTimeout(() => {
      button.innerHTML = originalHTML;
    }, 2000);
  }
}

// Copy paste content
document.getElementById('copyContent')?.addEventListener('click', async () => {
  const content = document.getElementById('pasteContent')?.textContent || '';
  const button = document.getElementById('copyContent');
  if (!button) return;
  
  try {
    await navigator.clipboard.writeText(content);
    showCopyFeedback(button, button.innerHTML);
  } catch (err) {
    console.error('Failed to copy content:', err);
  }
});

// Share URL
document.getElementById('shareUrl')?.addEventListener('click', async () => {
  const button = document.getElementById('shareUrl');
  if (!button) return;

  try {
    await navigator.clipboard.writeText(window.location.href);
    showCopyFeedback(button, button.innerHTML);
  } catch (err) {
    console.error('Failed to copy URL:', err);
  }
});

// Copy ID
document.getElementById('copyId')?.addEventListener('click', async () => {
  const idText = document.querySelector('#copyId .text-xs')?.textContent || '';
  const button = document.getElementById('copyId');
  if (!button) return;

  try {
    await navigator.clipboard.writeText(idText);
    showCopyFeedback(button, button.innerHTML);
  } catch (err) {
    console.error('Failed to copy ID:', err);
  }
});
</script>
